services:

  gateway:
    container_name: gateway-container
    build: 
      context: /gateway/
    image: gateway-image
    environment:
      - PORT=8080
    depends_on:
      config-server:
        condition: service_healthy
      discovery:
        condition: service_started
      cars-app:
        condition: service_started
      brands-app:
        condition: service_started
    networks:
      - app-network
    ports:
      - 8080:8080

  config-server:
    container_name: server-container
    build:
      context: /config-server/
    image: server-image
    depends_on:
      - discovery
    networks:
      - app-network
    ports:
      - 8888:8888
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8888/actuator/health || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10

  cars-app:
    container_name: cars-container
    build: 
      context: /Cars/
    image: cars-image
    environment:
      - SPRING_CONFIG_URI=http://config-server:8888
      - SPRING_DATASOURCE_PASSWORD=V3ryS3cur3P@$$w0rd   # !
      - PORT=8082
    depends_on:
     config-server:
      condition: service_healthy
     discovery:
      condition: service_started
     cars-db:
      condition: service_healthy
    networks:
      - app-network
    ports: 
     - 8082:8082

  cars-app2:
    container_name: cars-container2
    build:
      context: /Cars/
    image: cars-image
    environment:
      - SPRING_CONFIG_URI=http://config-server:8888
      - SPRING_DATASOURCE_PASSWORD=V3ryS3cur3P@$$w0rd   # !
      - PORT=8083
    depends_on:
     config-server:
      condition: service_healthy
     discovery:
      condition: service_started
     cars-db:
      condition: service_healthy
    networks:
      - app-network
    ports:
      - 8083:8083

  brands-app:
    container_name: brands-container
    build: 
      context: /Brands/
    image: brands-image
    environment:
      - SPRING_CONFIG_URI=http://config-server:8888
      - SPRING_DATASOURCE_PASSWORD=V3ryS3cur3P@$$w0rd   # !
      - PORT=8081
    depends_on:
     config-server:
      condition: service_healthy
     discovery:
      condition: service_started
     brands-db:
      condition: service_healthy
    networks:
      - app-network
    ports:
      - 8081:8081

  angular-app:
    container_name: angular-container
    build: 
      context: /frontend-angular/
    image: angular-image
    depends_on:
      - gateway
    ports:
      - 8084:8084
    networks:
      - app-network

  cars-db:
    image: postgres:17-bookworm
    container_name: cars-db-container
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=V3ryS3cur3P@$$w0rd
      - POSTGRES_DB=cars
    volumes:
      - cars_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d cars"]
      interval: 5s
      retries: 5
      start_period: 20s
      timeout: 5s
  
  brands-db:
    image: postgres:17-bookworm
    container_name: brands-db-container
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=V3ryS3cur3P@$$w0rd
      - POSTGRES_DB=brands
    volumes:
      - brands_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d brands"]
      interval: 5s
      retries: 5
      start_period: 20s
      timeout: 5s

  discovery:
    container_name: discovery-container
    build:
      context: /discovery/
    image: discovery-image
    networks:
      - app-network
    ports:
      - 8761:8761

networks:
  app-network:
    driver: bridge

volumes:
  cars_data:
  brands_data: